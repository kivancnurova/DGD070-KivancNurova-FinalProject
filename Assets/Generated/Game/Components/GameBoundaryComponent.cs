//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BoundaryComponent boundary { get { return (BoundaryComponent)GetComponent(GameComponentsLookup.Boundary); } }
    public bool hasBoundary { get { return HasComponent(GameComponentsLookup.Boundary); } }

    public void AddBoundary(float newMinX, float newMaxX, float newMinY, float newMaxY) {
        var index = GameComponentsLookup.Boundary;
        var component = (BoundaryComponent)CreateComponent(index, typeof(BoundaryComponent));
        component.minX = newMinX;
        component.maxX = newMaxX;
        component.minY = newMinY;
        component.maxY = newMaxY;
        AddComponent(index, component);
    }

    public void ReplaceBoundary(float newMinX, float newMaxX, float newMinY, float newMaxY) {
        var index = GameComponentsLookup.Boundary;
        var component = (BoundaryComponent)CreateComponent(index, typeof(BoundaryComponent));
        component.minX = newMinX;
        component.maxX = newMaxX;
        component.minY = newMinY;
        component.maxY = newMaxY;
        ReplaceComponent(index, component);
    }

    public void RemoveBoundary() {
        RemoveComponent(GameComponentsLookup.Boundary);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBoundary;

    public static Entitas.IMatcher<GameEntity> Boundary {
        get {
            if (_matcherBoundary == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Boundary);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBoundary = matcher;
            }

            return _matcherBoundary;
        }
    }
}
